{
  "resourceType": "Library",
  "id": "OMTKLogic",
  "meta": {
    "profile": [ "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-shareablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-computablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishablelibrary", "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary" ]
  },
  "text": {
    "status": "extensions",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n    <table class=\"grid dict\">\n        \n        <tr>\n            <th scope=\"row\"><b>Id: </b></th>\n            <td style=\"padding-left: 4px;\">OMTKLogic</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Url: </b></th>\n            <td style=\"padding-left: 4px;\">http://fhir.org/guides/cdc/opioid-cds/Library/OMTKLogic</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Version: </b></th>\n            <td style=\"padding-left: 4px;\">3.0.0</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Name: </b></th>\n            <td style=\"padding-left: 4px;\">OMTKLogic</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Title: </b></th>\n            <td style=\"padding-left: 4px;\">Opioid Management Terminology Knowledge Logic</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Status: </b></th>\n            <td style=\"padding-left: 4px;\">active</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Experimental: </b></th>\n            <td style=\"padding-left: 4px;\">false</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Type: </b></th>\n            <td style=\"padding-left: 4px;\">\n                \n                    \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>system: </b> <span>http://terminology.hl7.org/CodeSystem/library-type</span>\n                        </p>\n                        \n                        \n                        <p style=\"margin-bottom: 5px;\">\n                            <b>code: </b> <span>logic-library</span>\n                        </p>\n                        \n                        \n                    \n                \n                \n            </td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Date: </b></th>\n            <td style=\"padding-left: 4px;\">2022-02-01T20:35:24+00:00</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Publisher: </b></th>\n            <td style=\"padding-left: 4px;\">Alphora</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Description: </b></th>\n            <td style=\"padding-left: 4px;\">This library provides functionality for calculating Morphine Milligram Equivalents (MME) for opioid medications, as described in the CDC 2016 Opioid Prescribing Guideline.</td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Knowledge Capability: </b></th>\n          <td style=\"padding-left: 4px;\">\n            shareable computable publishable executable \n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Knowledge Representation Level: </b></th>\n          <td style=\"padding-left: 4px;\">\n            structured\n          </td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Use Context: </b></th>\n            <td style=\"padding-left: 4px;\">\n                <table class=\"grid-dict\">\n                    <tr><th><b>code</b></th><th><b>value</b></th><th><b>display</b></th></tr>\n                    \n                      <tr>\n                        <td>focus</td>\n                        <td>182888003</td>\n                        <td>Medication requested (situation)</td>\n                      </tr>\n                    \n                      <tr>\n                        <td>focus</td>\n                        <td>82423001</td>\n                        <td>Chronic pain (finding)</td>\n                      </tr>\n                    \n                </table>\n            </td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Jurisdiction: </b></th>\n            <td style=\"padding-left: 4px;\">840</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Usage: </b></th>\n            <td style=\"padding-left: 4px;\">NOTE: Do not use the calculated dose in MMEs to determine dosage for converting one opioid to another—the new opioid should be lower to avoid unintentional overdose caused by incomplete cross-tolerance and individual differences in opioid pharmacokinetics. Consult the medication label.</td>\n        </tr>\n        \n        \n        <tr>\n            <th scope=\"row\"><b>Copyright: </b></th>\n            <td style=\"padding-left: 4px;\">Copyright 2019+ Centers for Disease Control and Prevention (CDC)</td>\n        </tr>\n        \n        \n        \n        <tr>\n            <th scope=\"row\"><b>Last Review Date: </b></th>\n            <td style=\"padding-left: 4px;\">2020-09-26</td>\n        </tr>\n        \n        \n        \n        <tr>\n          <th scope=\"row\"><b>Related Artifacts: </b></th>\n          <td style=\"padding-left: 4px;\">\n            \n            <p><b>Documentation</b></p>\n            <ul>\n              \n                <li><a href=\"http://fhir.org/guides/cdc/opioid-mme-r4/mme-calculator.html\">MME Calculator MME Calculator</a></li>\n              \n            </ul>\n            \n            \n            <p><b>References</b></p>\n            <ul>\n              \n                <li>Nelson SJ, Zeng K, Kilbourne J, Powell T, Moore R. Normalized names for clinical drugs: RxNorm at 6 years.<br/>J Am Med Inform Assoc. 2011 Jul-Aug;18(4)441-8. doi: 10.1136/amiajnl-2011-000116.<br/>Epub 2011 Apr 21. PubMed PMID: 21515544; PubMed Central PMCID: PMC3128404.<br/>[Full Text](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/)<br/><a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/\">https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/</a></li>\n              \n                <li>Schadow G, McDonald CJ. The Unified Code for Units of Measure. Regenstrief Institute, Inc. and the UCUM Organization, 2017. Version 2.1, Revision 442. http://unitsofmeasure.org<br/><a href=\"http://unitsofmeasure.org\">http://unitsofmeasure.org</a></li>\n              \n                <li>Dowell D, Haegerich TM, Chou R. CDC Guideline for Prescribing Opioids for Chronic Pain — United States, 2016. MMWR Recomm Rep 2016;65(No. RR-1):1–49. DOI: http://dx.doi.org/10.15585/mmwr.rr6501e1<br/><a href=\"http://dx.doi.org/10.15585/mmwr.rr6501e1\">http://dx.doi.org/10.15585/mmwr.rr6501e1</a></li>\n              \n                <li>National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.<br/>Atlanta, GA: Centers for Disease Control and Prevention; https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf, accessed November 19th, 2020<br/><a href=\"https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\">https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf</a></li>\n              \n            </ul>\n            \n            \n            <p><b>Dependencies</b></p>\n            <ul>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/Library/OMTKData|3.0.0</li>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/Library/ConversionFactors|3.0.0</li>\n              \n                <li>http://www.nlm.nih.gov/research/umls/rxnorm</li>\n              \n                <li>http://terminology.hl7.org/CodeSystem/usage-context-type</li>\n              \n                <li>http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes</li>\n              \n            </ul>\n            \n            \n            \n            \n            \n          </td>\n        </tr>\n        \n        \n        <tr>\n          <th scope=\"row\"><b>Parameters: </b></th>\n          <td style=\"padding-left: 4px;\">\n            <table class=\"grid-dict\">\n              <tr><th><b>Name</b></th><th><b>Type</b></th><th><b>Min</b></th><th><b>Max</b></th><th><b>In/Out</b></th></tr>\n              \n                <tr><th>ErrorLevel</th><th>string</th><th>0</th><th>1</th><th>in</th></tr>\n              \n                <tr><th>ConversionFactorSupplementName</th><th>string</th><th>0</th><th>1</th><th>in</th></tr>\n              \n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n              <tr><td><pre><code class=\"language-cql\">library OMTKLogic version '3.0.0'\r\n\r\n/*\r\nThis library provides functionality for calculating Morphine Milligram\r\nEquivalents (MME) for opioid medications, as described in the CDC 2016 Opioid\r\nPrescribing Guideline.\r\n\r\nThe functionality in this library was developed based on the Java-based\r\nimplementation described [here](http://build.fhir.org/ig/cqframework/opioid-cds-r4/service-documentation.html#solution-component-3-core-logic-processing-java-class),\r\nas well as the MME conversion calculation published as part of the CDC 2016 Opioid\r\nPrescribing Guideline.\r\n\r\nNote that the logic in this library (and specifically the conversion factors captured here)\r\nare based on the 2016 version of the publication available from the CDC here:\r\nhttps://www.cdc.gov/drugoverdose/modules/data-files.html\r\n\r\nNational Center for Injury Prevention and Control. CDC compilation of benzodiazepines,\r\nmuscle relaxants, stimulants, zolpidem, and opioid analgesics with oral morphine milligram\r\nequivalent conversion factors, 2018 version. Atlanta, GA: Centers for Disease Control\r\nand Prevention; 2018. Available at https://www.cdc.gov/drugoverdose/resources/data.html\r\n\r\nThis version of the OMTKLogic library uses the OMTKData library as the\r\nsource for drug ingredient and strength information, rather than the\r\nOMTK data source. This library has no external dependencies and so\r\ncan run in an environment that supports pure CQL.\r\n\r\nNOTE: For performance, all terminology comparisons in this library use\r\ndirect integer comparison of the RxNorm codes.\r\n\r\nThis product uses publicly available data courtesy of the U.S. National Library of Medicine (NLM),\r\nNational Institutes of Health, Department of Health and Human Services; NLM is not responsible for\r\nthe product and does not endorse or recommend this or any other product.\r\n\r\nNelson SJ, Zeng K, Kilbourne J, Powell T, Moore R. Normalized names for clinical drugs: RxNorm at 6 years.\r\nJ Am Med Inform Assoc. 2011 Jul-Aug;18(4)441-8. doi: 10.1136/amiajnl-2011-000116.\r\nEpub 2011 Apr 21. PubMed PMID: 21515544; PubMed Central PMCID: PMC3128404.\r\n[Full text](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/)\r\n*/\r\n\r\ninclude OMTKData version '3.0.0' called OMTKData\r\ninclude ConversionFactors version '3.0.0' called ConversionFactors\r\n\r\ncodesystem &quot;RXNORM&quot;: 'http://www.nlm.nih.gov/research/umls/rxnorm'\r\n\r\nparameter ErrorLevel String default 'Warning'\r\n\r\ndefine function Msg(code String, errorLevel String, message String):\r\n  {\r\n    code: code,\r\n    errorLevel: errorLevel,\r\n    message: message\r\n  }\r\n\r\n/*\r\nNormalizes the input units to UCUM units\r\n\r\nThe values listed here are the only ones currently present in the OMTK data\r\n\r\nBased on the HL7 UCUM subset here:\r\nhttp://download.hl7.de/documents/ucum/ucumdata.html\r\n*/\r\ndefine function ToUCUM(unit String):\r\n  case unit\r\n    when 'MG' then 'mg'\r\n    when 'MG/ACTUAT' then 'mg/{actuat}'\r\n    when 'MG/HR' then 'mg/h'\r\n    when 'MG/ML' then 'mg/mL'\r\n    else Message(null, true, 'OMTKLogic.ToUCUM.UnknownUnit', ErrorLevel, 'Unknown unit ' &amp; unit)\r\n  end\r\n\r\ndefine function ToUCUM_Msg(unit String):\r\n  unit U\r\n    let result: ToUCUM(U)\r\n    return {\r\n      result: result,\r\n      message:\r\n        if result is null then\r\n          Msg('OMTKLogic.ToUCUM.UnknownUnit', ErrorLevel, 'Unknown unit' &amp; unit)\r\n        else\r\n          null\r\n    }\r\n\r\n/*\r\n  Calculates daily frequency given frequency within a period\r\n*/\r\ndefine function ToDaily(frequency Integer, period Quantity):\r\n  case period.unit\r\n    when 'h' then frequency * (24.0 / period.value)\r\n    when 'min' then frequency * (24.0 / period.value) * 60\r\n    when 's' then frequency * (24.0 / period.value) * 60 * 60\r\n    when 'd' then frequency * (24.0 / period.value) / 24\r\n    when 'wk' then frequency * (24.0 / period.value) / (24 * 7)\r\n    when 'mo' then frequency * (24.0 / period.value) / (24 * 30) /* assuming 30 days in month */\r\n    when 'a' then frequency * (24.0 / period.value) / (24 * 365) /* assuming 365 days in year */\r\n    when 'hour' then frequency * (24.0 / period.value)\r\n    when 'minute' then frequency * (24.0 / period.value) * 60\r\n    when 'second' then frequency * (24.0 / period.value) * 60 * 60\r\n    when 'day' then frequency * (24.0 / period.value) / 24\r\n    when 'week' then frequency * (24.0 / period.value) / (24 * 7)\r\n    when 'month' then frequency * (24.0 / period.value) / (24 * 30) /* assuming 30 days in month */\r\n    when 'year' then frequency * (24.0 / period.value) / (24 * 365) /* assuming 365 days in year */\r\n    when 'hours' then frequency * (24.0 / period.value)\r\n    when 'minutes' then frequency * (24.0 / period.value) * 60\r\n    when 'seconds' then frequency * (24.0 / period.value) * 60 * 60\r\n    when 'days' then frequency * (24.0 / period.value) / 24\r\n    when 'weeks' then frequency * (24.0 / period.value) / (24 * 7)\r\n    when 'months' then frequency * (24.0 / period.value) / (24 * 30) /* assuming 30 days in month */\r\n    when 'years' then frequency * (24.0 / period.value) / (24 * 365) /* assuming 365 days in year */\r\n    else Message(null, true, 'OMTKLogic.ToDaily.UnknownUnit', ErrorLevel, 'Unknown unit ' &amp; period.unit)\r\n  end\r\n\r\ndefine function ToDaily_Msg(frequency Integer, period Quantity):\r\n  frequency F\r\n    let result: ToDaily(frequency, period)\r\n    return {\r\n      result: result,\r\n      message:\r\n        if result is null then\r\n          Msg('OMTKLogic.ToDaily.UnknownUnit', ErrorLevel, 'Unknown unit ' &amp; period.unit)\r\n        else\r\n          null\r\n    }\r\n\r\n/*\r\nReturns the opioid ingredients and their strengths that\r\nmake up the drug identified by the given rxNormCode as a list of tuples:\r\n\r\nList&lt;Tuple {\r\n  rxNormCode Code,\r\n  doseFormCode Code,\r\n  doseFormName String,\r\n  ingredientCode Code,\r\n  ingredientName String,\r\n  strength Quantity\r\n}&gt;\r\n*/\r\n\r\n/*\r\nGetIngredients:\r\n  List&lt;{\r\n    rxNormCode Code,\r\n    doseFormCode Code,\r\n    ingredientCode code,\r\n    strength Quantity\r\n  }&gt;\r\n*/\r\ndefine function GetIngredients(rxNormCode Code):\r\n  OMTKData.DrugIngredients DI\r\n    where DI.drugCode = ToInteger(rxNormCode.code)\r\n    return {\r\n      rxNormCode: Code { code: ToString(DI.drugCode), system: 'http://www.nlm.nih.gov/research/umls/rxnorm', display: DI.drugName },\r\n      doseFormCode: Code { code: ToString(DI.doseFormCode), system: 'http://www.nlm.nih.gov/research/umls/rxnorm', display: DI.doseFormName },\r\n      ingredientCode: Code { code: ToString(DI.ingredientCode), system: 'http://www.nlm.nih.gov/research/umls/rxnorm', display: DI.ingredientName },\r\n      strength: Quantity {\r\n        value: DI.strengthValue,\r\n        unit: ToUCUM(DI.strengthUnit)\r\n      }\r\n    }\r\n\r\n/*\r\nReturns the first RxNorm code in the given concept that matches a drug code\r\nspecified in OMTKData.\r\n*/\r\ndefine function GetMedicationCode(concept Concept):\r\n  First(\r\n    ((concept.codes) C\r\n      where C.system = 'http://www.nlm.nih.gov/research/umls/rxnorm'\r\n        return singleton from (\r\n          OMTKData.DrugIngredients DI\r\n            where DI.drugCode = ToInteger(C.code)\r\n            return Code {\r\n              code: ToString(DI.drugCode),\r\n              system: 'http://www.nlm.nih.gov/research/umls/rxnorm',\r\n              display: DI.drugName\r\n            }\r\n        )\r\n    ) X\r\n      where X is not null\r\n  )\r\n\r\n/*\r\nReturns the display of the given concept, if present, otherwise, looks up medication\r\nnames for any RxNormCodes within the concept using the GetMedicationName function\r\n*/\r\ndefine function GetMedicationConceptName(concept Concept):\r\n  if concept.display is null then\r\n    First(\r\n      (concept.codes) C\r\n        where C.system = 'http://www.nlm.nih.gov/research/umls/rxnorm'\r\n        return GetMedicationName(C)\r\n    )\r\n  else\r\n    concept.display\r\n\r\n/*\r\nReturns the display of the given code, if present, otherwise looks it up from the OMTK data\r\n*/\r\ndefine function GetMedicationName(rxNormCode Code):\r\n  if rxNormCode.display is null then\r\n    singleton from (\r\n      OMTKData.DrugIngredients DI\r\n        where DI.drugCode = ToInteger(rxNormCode.code)\r\n        return DI.drugName\r\n    )\r\n    else rxNormCode.display\r\n\r\n/*\r\nReturns the display of the given ingredient, if present, otherwise looks it up from the OMTK data\r\n*/\r\ndefine function GetIngredientName(ingredientCode Code):\r\n  if ingredientCode.display is null then\r\n    singleton from (\r\n      OMTKData.DrugIngredients DI\r\n        where DI.ingredientCode = ToInteger(ingredientCode.code)\r\n        return DI.ingredientName\r\n    )\r\n    else ingredientCode.display\r\n\r\n/*\r\nReturns the display of the given dose form, if present, otherwise looks it up from the OMTK data\r\n*/\r\ndefine function GetDoseFormName(doseFormCode Code):\r\n  if doseFormCode.display is null then\r\n    singleton from (\r\n      OMTKData.DrugIngredients DI\r\n        where DI.doseFormCode = ToInteger(doseFormCode.code)\r\n        return DI.doseFormName\r\n    )\r\n    else doseFormCode.display\r\n\r\n/*\r\n  Removes the last per argument from a unit\r\n  NOTE: Rewrote to not use LastPositionOf, since that function is not implemented in the JS engine\r\n  https://github.com/cqframework/cql-execution/issues/147\r\n*/\r\ndefine function StripPer(unit String):\r\n  unit X\r\n    let split: Split(unit, '/'),\r\n      splitCount: Count(split)\r\n    return\r\n      if splitCount &gt; 1 then\r\n        Substring(unit, 0, Length(unit) - Length(split[splitCount - 1]) - 1)\r\n      else\r\n        unit\r\n\r\n/*\r\ndefine function StripPer(unit String):\r\n  if LastPositionOf('/', unit) &gt;= 0\r\n    then Substring(unit, 0, LastPositionOf('/', unit))\r\n    else unit\r\n*/\r\n\r\n/*\r\n  Calculates daily dose for a specific ingredient based on the ingredient strength,\r\n  dose form, dose quantity, and daily frequency.\r\n  In addition, returns a textual description of the daily dose.\r\n  Tuple { result: Quantity, description: String }\r\n*/\r\ndefine function GetDailyDose(ingredientCode Code, strength Quantity, doseFormCode Code, doseQuantity Quantity, dosesPerDay Decimal):\r\n  case\r\n    when dosesPerDay is null or doseQuantity is null or strength is null or strength.value is null or strength.unit is null then\r\n      {\r\n        result: null as Quantity,\r\n        description: 'Missing doses per day, dose quantity, and/or strength'\r\n      }\r\n\t  /* if patch --&gt; daily dose = dose value (e.g, number patches with doseQuantity unit = &quot;patch&quot;) * per-hour strength */\r\n    when ToInteger(doseFormCode.code) = 316987 then\r\n      /* buprenorphine or fentanyl patch */\r\n      if ToInteger(ingredientCode.code) in { 1819, 4337 } then\r\n        (Quantity { value: dosesPerDay * doseQuantity.value * strength.value, unit: strength.unit }) dailyDose\r\n          return {\r\n            result: dailyDose,\r\n            description: GetIngredientName(ingredientCode) &amp; ' patch: ' &amp; ToString(doseQuantity.value) &amp; ' * ' &amp; ToString(dosesPerDay) &amp; '/d * ' &amp; ToString(strength) &amp; ' = ' + ToString(dailyDose)\r\n          }\r\n      else\r\n        {\r\n          result: null as Quantity,\r\n          description: 'Unknown patch ingredient: ' &amp; ingredientCode.code &amp; ':' &amp; ingredientCode.display\r\n        }\r\n\r\n    /* if dose unit in actual mass units (mg or ug -- when it's a single med) --&gt; daily dose = numTimesPerDay * dose */\r\n    when doseQuantity.unit in { 'mg', 'ug' } then\r\n      (Quantity { value: dosesPerDay * doseQuantity.value, unit: doseQuantity.unit }) dailyDose\r\n        return {\r\n          result: dailyDose,\r\n          description: GetIngredientName(ingredientCode) + ' ' + GetDoseFormName(doseFormCode) + ': ' + ToString(dosesPerDay) + '/d * ' + ToString(doseQuantity) + ' = ' + ToString(dailyDose)\r\n        }\r\n\r\n    /* if doseQuantity is in actual volume units (mL) --&gt; daily dose = numTimesPerDay * dose * strength */\r\n    when doseQuantity.unit = 'mL' and (PositionOf('/mL', strength.unit) = Length(strength.unit) - 3) then\r\n      (Quantity { value: dosesPerDay * doseQuantity.value * strength.value, unit: StripPer(strength.unit) }) dailyDose\r\n        return {\r\n          result: dailyDose,\r\n          description: GetIngredientName(ingredientCode) + ' ' + GetDoseFormName(doseFormCode) + ': ' + ToString(dosesPerDay) + '/d * ' + ToString(doseQuantity) + ' * ' &amp; ToString(strength) &amp; ' = ' + ToString(dailyDose)\r\n        }\r\n\r\n\t\t/* if doseQuantity is not in actual units (e.g., 1 tab, 1 spray -- when it's a combo med with a unit of tablet, or it's mg/actuat) --&gt;  daily dose = numTimesPerDay * dose value * strength value */\r\n    else\r\n      (Quantity { value: dosesPerDay * doseQuantity.value * strength.value, unit: StripPer(strength.unit) }) dailyDose\r\n        return {\r\n          result: dailyDose,\r\n          description: GetIngredientName(ingredientCode) + ' ' + GetDoseFormName(doseFormCode) + ': ' + ToString(dosesPerDay) + '/d * ' + ToString(doseQuantity) + ' * ' + ToString(strength) + ' = ' + ToString(dailyDose)\r\n        }\r\n  end\r\n\r\n/*\r\n  Calculates MMEs for the given input prescription information and returns it\r\n  as a list of tuples:\r\n\r\n  List&lt;Tuple {\r\n    rxNormCode Code,\r\n    doseFormCode Code,\r\n    doseQuantity Quantity,\r\n    dosesPerDay Decimal,\r\n    ingredientCode Code,\r\n    strength Quantity,\r\n    dailyDose Quantity,\r\n    dailyDoseDescription String,\r\n    conversionFactor Decimal,\r\n    mme Quantity\r\n  }&gt;\r\n*/\r\ndefine function CalculateMMEs(medications List&lt;Tuple { rxNormCode Code, doseQuantity Quantity, dosesPerDay Decimal }&gt;):\r\n  Flatten(\r\n    medications M\r\n      let Ingredients: GetIngredients(M.rxNormCode)\r\n      return\r\n        Ingredients I\r\n          let\r\n            adjustedDoseQuantity: M.doseQuantity,\r\n            dailyDose: GetDailyDose(I.ingredientCode, I.strength, I.doseFormCode, adjustedDoseQuantity, M.dosesPerDay),\r\n            factor: ConversionFactors.GetConversionFactor(I.ingredientCode, dailyDose.result, I.doseFormCode, M.dosesPerDay)\r\n          return {\r\n            rxNormCode: M.rxNormCode,\r\n            doseFormCode: I.doseFormCode,\r\n            doseQuantity: adjustedDoseQuantity,\r\n            dosesPerDay: M.dosesPerDay,\r\n            ingredientCode: I.ingredientCode,\r\n            strength: I.strength,\r\n            dailyDose: dailyDose.result,\r\n            dailyDoseDescription: dailyDose.description &amp; (' * factor: ' + Coalesce(ToString(factor), 'No conversion factor available')),\r\n            conversionFactor: factor,\r\n            mme: Quantity(\r\n              Round(dailyDose.result.value * factor, 1),\r\n              '{MME}/d'\r\n            )\r\n          }\r\n  )\r\n\r\ndefine function Quantity(value Decimal, unit String):\r\n  if value is not null then\r\n    Quantity { value: value, unit: unit }\r\n  else\r\n    null\r\n</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+xml</th></tr>\n              <tr><td><pre><code>Encoded data (391084 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n        \n        \n        <tr>\n          <td colspan=\"2\">\n            <table>\n              <tr><th><b>Content: </b> application/elm+json</th></tr>\n              <tr><td><pre><code>Encoded data (2041164 characters)</code></pre></td></tr>\n            </table>\n          </td>\n        </tr>\n        \n        \n    </table>\n</div>"
  },
  "extension": [ {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "shareable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "computable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "publishable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability",
    "valueCode": "executable"
  }, {
    "url": "http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeRepresentationLevel",
    "valueCode": "structured"
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/cdc/opioid-cds/Library/OMTKLogic",
  "version": "3.0.0",
  "name": "OMTKLogic",
  "title": "Opioid Management Terminology Knowledge Logic",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "date": "2022-02-01T20:35:24+00:00",
  "publisher": "Alphora",
  "contact": [ {
    "telecom": [ {
      "system": "url",
      "value": "http://alphora.com"
    } ]
  } ],
  "description": "This library provides functionality for calculating Morphine Milligram Equivalents (MME) for opioid medications, as described in the CDC 2016 Opioid Prescribing Guideline.",
  "useContext": [ {
    "code": {
      "system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://snomed.info/sct",
        "code": "182888003",
        "display": "Medication requested (situation)"
      } ]
    }
  }, {
    "code": {
      "system": "http://terminology.hl7.org/CodeSystem/usage-context-type",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://snomed.info/sct",
        "code": "82423001",
        "display": "Chronic pain (finding)"
      } ]
    }
  } ],
  "jurisdiction": [ {
    "coding": [ {
      "system": "http://unstats.un.org/unsd/methods/m49/m49.htm",
      "code": "840"
    } ]
  } ],
  "usage": "NOTE: Do not use the calculated dose in MMEs to determine dosage for converting one opioid to another—the new opioid should be lower to avoid unintentional overdose caused by incomplete cross-tolerance and individual differences in opioid pharmacokinetics. Consult the medication label.",
  "copyright": "Copyright 2019+ Centers for Disease Control and Prevention (CDC)",
  "lastReviewDate": "2020-09-26",
  "topic": [ {
    "text": "Opioid Prescribing"
  }, {
    "text": "Morphine Milligram Equivalent (MME)"
  } ],
  "author": [ {
    "name": "Floyd Eisenberg, MD, MPH"
  }, {
    "name": "Kensaku Kawamoto, MD, PhD, MHS"
  }, {
    "name": "Robert McClure, MD"
  }, {
    "name": "Bryn Rhodes"
  } ],
  "relatedArtifact": [ {
    "type": "citation",
    "label": "RxNORM",
    "display": "This product uses publicly available data courtesy of the U.S. National Library of Medicine (NLM), National Institutes of Health, Department of Health and Human Services; NLM is not responsible for the product and does not endorse or recommend this or any other product.",
    "citation": "Nelson SJ, Zeng K, Kilbourne J, Powell T, Moore R. Normalized names for clinical drugs: RxNorm at 6 years.<br/>J Am Med Inform Assoc. 2011 Jul-Aug;18(4)441-8. doi: 10.1136/amiajnl-2011-000116.<br/>Epub 2011 Apr 21. PubMed PMID: 21515544; PubMed Central PMCID: PMC3128404.<br/>[Full Text](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/)",
    "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/",
    "document": {
      "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3128404/"
    }
  }, {
    "type": "citation",
    "label": "UCUM",
    "display": "This product includes all or a portion of the UCUM table, UCUM codes, and UCUM definitions or is derived from it, subject to a license from Regenstrief Institute, Inc. and The UCUM Organization. Your use of the UCUM table, UCUM codes, UCUM definitions also is subject to this license, a copy of which is available at http://unitsofmeasure.org<br/> The current complete UCUM table, UCUM Specification are available for download at http://unitsofmeasure.org<br/>The UCUM table and UCUM codes are copyright © 1995-2009, Regenstrief Institute, Inc. and the Unified Codes for Units of Measures (UCUM) Organization. All rights reserved.",
    "citation": "Schadow G, McDonald CJ. The Unified Code for Units of Measure. Regenstrief Institute, Inc. and the UCUM Organization, 2017. Version 2.1, Revision 442. http://unitsofmeasure.org",
    "url": "http://unitsofmeasure.org",
    "document": {
      "url": "http://unitsofmeasure.org"
    }
  }, {
    "type": "citation",
    "label": "CDC 2016 Opioid Prescribing Guideline",
    "display": "Centers For Disease Control and Prevention (CDC) Guideline for Prescribing Opioids for Chronic Pain — United States, 2016",
    "citation": "Dowell D, Haegerich TM, Chou R. CDC Guideline for Prescribing Opioids for Chronic Pain — United States, 2016. MMWR Recomm Rep 2016;65(No. RR-1):1–49. DOI: http://dx.doi.org/10.15585/mmwr.rr6501e1",
    "url": "http://dx.doi.org/10.15585/mmwr.rr6501e1",
    "document": {
      "url": "http://dx.doi.org/10.15585/mmwr.rr6501e1"
    }
  }, {
    "type": "citation",
    "label": "Calculating total daily dose of opioids for safer dosage",
    "display": "National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.",
    "citation": "National Center for Injury Prevention and Control. Calculating total daily dose of opioids for safer dosage.<br/>Atlanta, GA: Centers for Disease Control and Prevention; https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf, accessed November 19th, 2020",
    "url": "https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf",
    "document": {
      "url": "https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf"
    }
  }, {
    "type": "documentation",
    "label": "MME Calculator",
    "display": "MME Calculator",
    "url": "http://fhir.org/guides/cdc/opioid-cds/mme-calculator.html",
    "document": {
      "url": "http://fhir.org/guides/cdc/opioid-cds/mme-calculator.html"
    }
  }, {
    "type": "depends-on",
    "display": "Library OMTKData",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/OMTKData|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library ConversionFactors",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/ConversionFactors|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library CDCMMEClinicalConversionFactors",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/CDCMMEClinicalConversionFactors|3.0.0"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Code system RXNORM",
    "resource": "http://www.nlm.nih.gov/research/umls/rxnorm"
  }, {
    "type": "depends-on",
    "display": "Code system Usage Context Type",
    "resource": "http://terminology.hl7.org/CodeSystem/usage-context-type"
  }, {
    "type": "depends-on",
    "display": "Code system CDC MME Usage Context Codes",
    "resource": "http://fhir.org/guides/cdc/opioid-mme-r4/CodeSystem/CDCMMEUsageContextCodes"
  } ],
  "parameter": [ {
    "name": "ErrorLevel",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "ConversionFactorSupplementName",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "string"
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBPTVRLTG9naWMgdmVyc2lvbiAnMy4wLjAnDQoNCi8qDQpUaGlzIGxpYnJhcnkgcHJvdmlkZXMgZnVuY3Rpb25hbGl0eSBmb3IgY2FsY3VsYXRpbmcgTW9ycGhpbmUgTWlsbGlncmFtDQpFcXVpdmFsZW50cyAoTU1FKSBmb3Igb3Bpb2lkIG1lZGljYXRpb25zLCBhcyBkZXNjcmliZWQgaW4gdGhlIENEQyAyMDE2IE9waW9pZA0KUHJlc2NyaWJpbmcgR3VpZGVsaW5lLg0KDQpUaGUgZnVuY3Rpb25hbGl0eSBpbiB0aGlzIGxpYnJhcnkgd2FzIGRldmVsb3BlZCBiYXNlZCBvbiB0aGUgSmF2YS1iYXNlZA0KaW1wbGVtZW50YXRpb24gZGVzY3JpYmVkIFtoZXJlXShodHRwOi8vYnVpbGQuZmhpci5vcmcvaWcvY3FmcmFtZXdvcmsvb3Bpb2lkLWNkcy1yNC9zZXJ2aWNlLWRvY3VtZW50YXRpb24uaHRtbCNzb2x1dGlvbi1jb21wb25lbnQtMy1jb3JlLWxvZ2ljLXByb2Nlc3NpbmctamF2YS1jbGFzcyksDQphcyB3ZWxsIGFzIHRoZSBNTUUgY29udmVyc2lvbiBjYWxjdWxhdGlvbiBwdWJsaXNoZWQgYXMgcGFydCBvZiB0aGUgQ0RDIDIwMTYgT3Bpb2lkDQpQcmVzY3JpYmluZyBHdWlkZWxpbmUuDQoNCk5vdGUgdGhhdCB0aGUgbG9naWMgaW4gdGhpcyBsaWJyYXJ5IChhbmQgc3BlY2lmaWNhbGx5IHRoZSBjb252ZXJzaW9uIGZhY3RvcnMgY2FwdHVyZWQgaGVyZSkNCmFyZSBiYXNlZCBvbiB0aGUgMjAxNiB2ZXJzaW9uIG9mIHRoZSBwdWJsaWNhdGlvbiBhdmFpbGFibGUgZnJvbSB0aGUgQ0RDIGhlcmU6DQpodHRwczovL3d3dy5jZGMuZ292L2RydWdvdmVyZG9zZS9tb2R1bGVzL2RhdGEtZmlsZXMuaHRtbA0KDQpOYXRpb25hbCBDZW50ZXIgZm9yIEluanVyeSBQcmV2ZW50aW9uIGFuZCBDb250cm9sLiBDREMgY29tcGlsYXRpb24gb2YgYmVuem9kaWF6ZXBpbmVzLA0KbXVzY2xlIHJlbGF4YW50cywgc3RpbXVsYW50cywgem9scGlkZW0sIGFuZCBvcGlvaWQgYW5hbGdlc2ljcyB3aXRoIG9yYWwgbW9ycGhpbmUgbWlsbGlncmFtDQplcXVpdmFsZW50IGNvbnZlcnNpb24gZmFjdG9ycywgMjAxOCB2ZXJzaW9uLiBBdGxhbnRhLCBHQTogQ2VudGVycyBmb3IgRGlzZWFzZSBDb250cm9sDQphbmQgUHJldmVudGlvbjsgMjAxOC4gQXZhaWxhYmxlIGF0IGh0dHBzOi8vd3d3LmNkYy5nb3YvZHJ1Z292ZXJkb3NlL3Jlc291cmNlcy9kYXRhLmh0bWwNCg0KVGhpcyB2ZXJzaW9uIG9mIHRoZSBPTVRLTG9naWMgbGlicmFyeSB1c2VzIHRoZSBPTVRLRGF0YSBsaWJyYXJ5IGFzIHRoZQ0Kc291cmNlIGZvciBkcnVnIGluZ3JlZGllbnQgYW5kIHN0cmVuZ3RoIGluZm9ybWF0aW9uLCByYXRoZXIgdGhhbiB0aGUNCk9NVEsgZGF0YSBzb3VyY2UuIFRoaXMgbGlicmFyeSBoYXMgbm8gZXh0ZXJuYWwgZGVwZW5kZW5jaWVzIGFuZCBzbw0KY2FuIHJ1biBpbiBhbiBlbnZpcm9ubWVudCB0aGF0IHN1cHBvcnRzIHB1cmUgQ1FMLg0KDQpOT1RFOiBGb3IgcGVyZm9ybWFuY2UsIGFsbCB0ZXJtaW5vbG9neSBjb21wYXJpc29ucyBpbiB0aGlzIGxpYnJhcnkgdXNlDQpkaXJlY3QgaW50ZWdlciBjb21wYXJpc29uIG9mIHRoZSBSeE5vcm0gY29kZXMuDQoNClRoaXMgcHJvZHVjdCB1c2VzIHB1YmxpY2x5IGF2YWlsYWJsZSBkYXRhIGNvdXJ0ZXN5IG9mIHRoZSBVLlMuIE5hdGlvbmFsIExpYnJhcnkgb2YgTWVkaWNpbmUgKE5MTSksDQpOYXRpb25hbCBJbnN0aXR1dGVzIG9mIEhlYWx0aCwgRGVwYXJ0bWVudCBvZiBIZWFsdGggYW5kIEh1bWFuIFNlcnZpY2VzOyBOTE0gaXMgbm90IHJlc3BvbnNpYmxlIGZvcg0KdGhlIHByb2R1Y3QgYW5kIGRvZXMgbm90IGVuZG9yc2Ugb3IgcmVjb21tZW5kIHRoaXMgb3IgYW55IG90aGVyIHByb2R1Y3QuDQoNCk5lbHNvbiBTSiwgWmVuZyBLLCBLaWxib3VybmUgSiwgUG93ZWxsIFQsIE1vb3JlIFIuIE5vcm1hbGl6ZWQgbmFtZXMgZm9yIGNsaW5pY2FsIGRydWdzOiBSeE5vcm0gYXQgNiB5ZWFycy4NCkogQW0gTWVkIEluZm9ybSBBc3NvYy4gMjAxMSBKdWwtQXVnOzE4KDQpNDQxLTguIGRvaTogMTAuMTEzNi9hbWlham5sLTIwMTEtMDAwMTE2Lg0KRXB1YiAyMDExIEFwciAyMS4gUHViTWVkIFBNSUQ6IDIxNTE1NTQ0OyBQdWJNZWQgQ2VudHJhbCBQTUNJRDogUE1DMzEyODQwNC4NCltGdWxsIHRleHRdKGh0dHBzOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcG1jL2FydGljbGVzL1BNQzMxMjg0MDQvKQ0KKi8NCg0KaW5jbHVkZSBPTVRLRGF0YSB2ZXJzaW9uICczLjAuMCcgY2FsbGVkIE9NVEtEYXRhDQppbmNsdWRlIENvbnZlcnNpb25GYWN0b3JzIHZlcnNpb24gJzMuMC4wJyBjYWxsZWQgQ29udmVyc2lvbkZhY3RvcnMNCg0KY29kZXN5c3RlbSAiUlhOT1JNIjogJ2h0dHA6Ly93d3cubmxtLm5paC5nb3YvcmVzZWFyY2gvdW1scy9yeG5vcm0nDQoNCnBhcmFtZXRlciBFcnJvckxldmVsIFN0cmluZyBkZWZhdWx0ICdXYXJuaW5nJw0KDQpkZWZpbmUgZnVuY3Rpb24gTXNnKGNvZGUgU3RyaW5nLCBlcnJvckxldmVsIFN0cmluZywgbWVzc2FnZSBTdHJpbmcpOg0KICB7DQogICAgY29kZTogY29kZSwNCiAgICBlcnJvckxldmVsOiBlcnJvckxldmVsLA0KICAgIG1lc3NhZ2U6IG1lc3NhZ2UNCiAgfQ0KDQovKg0KTm9ybWFsaXplcyB0aGUgaW5wdXQgdW5pdHMgdG8gVUNVTSB1bml0cw0KDQpUaGUgdmFsdWVzIGxpc3RlZCBoZXJlIGFyZSB0aGUgb25seSBvbmVzIGN1cnJlbnRseSBwcmVzZW50IGluIHRoZSBPTVRLIGRhdGENCg0KQmFzZWQgb24gdGhlIEhMNyBVQ1VNIHN1YnNldCBoZXJlOg0KaHR0cDovL2Rvd25sb2FkLmhsNy5kZS9kb2N1bWVudHMvdWN1bS91Y3VtZGF0YS5odG1sDQoqLw0KZGVmaW5lIGZ1bmN0aW9uIFRvVUNVTSh1bml0IFN0cmluZyk6DQogIGNhc2UgdW5pdA0KICAgIHdoZW4gJ01HJyB0aGVuICdtZycNCiAgICB3aGVuICdNRy9BQ1RVQVQnIHRoZW4gJ21nL3thY3R1YXR9Jw0KICAgIHdoZW4gJ01HL0hSJyB0aGVuICdtZy9oJw0KICAgIHdoZW4gJ01HL01MJyB0aGVuICdtZy9tTCcNCiAgICBlbHNlIE1lc3NhZ2UobnVsbCwgdHJ1ZSwgJ09NVEtMb2dpYy5Ub1VDVU0uVW5rbm93blVuaXQnLCBFcnJvckxldmVsLCAnVW5rbm93biB1bml0ICcgJiB1bml0KQ0KZW5kDQoNCmRlZmluZSBmdW5jdGlvbiBUb1VDVU1fTXNnKHVuaXQgU3RyaW5nKToNCiAgdW5pdCBVDQogICAgbGV0IHJlc3VsdDogVG9VQ1VNKFUpDQogICAgcmV0dXJuIHsNCiAgICAgIHJlc3VsdDogcmVzdWx0LA0KICAgICAgbWVzc2FnZToNCiAgICAgICAgaWYgcmVzdWx0IGlzIG51bGwgdGhlbg0KICAgICAgICAgIE1zZygnT01US0xvZ2ljLlRvVUNVTS5Vbmtub3duVW5pdCcsIEVycm9yTGV2ZWwsICdVbmtub3duIHVuaXQnICYgdW5pdCkNCiAgICAgICAgZWxzZQ0KICAgICAgICAgIG51bGwNCiAgICB9DQoNCi8qDQogIENhbGN1bGF0ZXMgZGFpbHkgZnJlcXVlbmN5IGdpdmVuIGZyZXF1ZW5jeSB3aXRoaW4gYSBwZXJpb2QNCiovDQpkZWZpbmUgZnVuY3Rpb24gVG9EYWlseShmcmVxdWVuY3kgSW50ZWdlciwgcGVyaW9kIFF1YW50aXR5KToNCiAgY2FzZSBwZXJpb2QudW5pdA0KICAgIHdoZW4gJ2gnIHRoZW4gZnJlcXVlbmN5ICogKDI0LjAgLyBwZXJpb2QudmFsdWUpDQogICAgd2hlbiAnbWluJyB0aGVuIGZyZXF1ZW5jeSAqICgyNC4wIC8gcGVyaW9kLnZhbHVlKSAqIDYwDQogICAgd2hlbiAncycgdGhlbiBmcmVxdWVuY3kgKiAoMjQuMCAvIHBlcmlvZC52YWx1ZSkgKiA2MCAqIDYwDQogICAgd2hlbiAnZCcgdGhlbiBmcmVxdWVuY3kgKiAoMjQuMCAvIHBlcmlvZC52YWx1ZSkgLyAyNA0KICAgIHdoZW4gJ3drJyB0aGVuIGZyZXF1ZW5jeSAqICgyNC4wIC8gcGVyaW9kLnZhbHVlKSAvICgyNCAqIDcpDQogICAgd2hlbiAnbW8nIHRoZW4gZnJlcXVlbmN5ICogKDI0LjAgLyBwZXJpb2QudmFsdWUpIC8gKDI0ICogMzApIC8qIGFzc3VtaW5nIDMwIGRheXMgaW4gbW9udGggKi8NCiAgICB3aGVuICdhJyB0aGVuIGZyZXF1ZW5jeSAqICgyNC4wIC8gcGVyaW9kLnZhbHVlKSAvICgyNCAqIDM2NSkgLyogYXNzdW1pbmcgMzY1IGRheXMgaW4geWVhciAqLw0KICAgIHdoZW4gJ2hvdXInIHRoZW4gZnJlcXVlbmN5ICogKDI0LjAgLyBwZXJpb2QudmFsdWUpDQogICAgd2hlbiAnbWludXRlJyB0aGVuIGZyZXF1ZW5jeSAqICgyNC4wIC8gcGVyaW9kLnZhbHVlKSAqIDYwDQogICAgd2hlbiAnc2Vjb25kJyB0aGVuIGZyZXF1ZW5jeSAqICgyNC4wIC8gcGVyaW9kLnZhbHVlKSAqIDYwICogNjANCiAgICB3aGVuICdkYXknIHRoZW4gZnJlcXVlbmN5ICogKDI0LjAgLyBwZXJpb2QudmFsdWUpIC8gMjQNCiAgICB3aGVuICd3ZWVrJyB0aGVuIGZyZXF1ZW5jeSAqICgyNC4wIC8gcGVyaW9kLnZhbHVlKSAvICgyNCAqIDcpDQogICAgd2hlbiAnbW9udGgnIHRoZW4gZnJlcXVlbmN5ICogKDI0LjAgLyBwZXJpb2QudmFsdWUpIC8gKDI0ICogMzApIC8qIGFzc3VtaW5nIDMwIGRheXMgaW4gbW9udGggKi8NCiAgICB3aGVuICd5ZWFyJyB0aGVuIGZyZXF1ZW5jeSAqICgyNC4wIC8gcGVyaW9kLnZhbHVlKSAvICgyNCAqIDM2NSkgLyogYXNzdW1pbmcgMzY1IGRheXMgaW4geWVhciAqLw0KICAgIHdoZW4gJ2hvdXJzJyB0aGVuIGZyZXF1ZW5jeSAqICgyNC4wIC8gcGVyaW9kLnZhbHVlKQ0KICAgIHdoZW4gJ21pbnV0ZXMnIHRoZW4gZnJlcXVlbmN5ICogKDI0LjAgLyBwZXJpb2QudmFsdWUpICogNjANCiAgICB3aGVuICdzZWNvbmRzJyB0aGVuIGZyZXF1ZW5jeSAqICgyNC4wIC8gcGVyaW9kLnZhbHVlKSAqIDYwICogNjANCiAgICB3aGVuICdkYXlzJyB0aGVuIGZyZXF1ZW5jeSAqICgyNC4wIC8gcGVyaW9kLnZhbHVlKSAvIDI0DQogICAgd2hlbiAnd2Vla3MnIHRoZW4gZnJlcXVlbmN5ICogKDI0LjAgLyBwZXJpb2QudmFsdWUpIC8gKDI0ICogNykNCiAgICB3aGVuICdtb250aHMnIHRoZW4gZnJlcXVlbmN5ICogKDI0LjAgLyBwZXJpb2QudmFsdWUpIC8gKDI0ICogMzApIC8qIGFzc3VtaW5nIDMwIGRheXMgaW4gbW9udGggKi8NCiAgICB3aGVuICd5ZWFycycgdGhlbiBmcmVxdWVuY3kgKiAoMjQuMCAvIHBlcmlvZC52YWx1ZSkgLyAoMjQgKiAzNjUpIC8qIGFzc3VtaW5nIDM2NSBkYXlzIGluIHllYXIgKi8NCiAgICBlbHNlIE1lc3NhZ2UobnVsbCwgdHJ1ZSwgJ09NVEtMb2dpYy5Ub0RhaWx5LlVua25vd25Vbml0JywgRXJyb3JMZXZlbCwgJ1Vua25vd24gdW5pdCAnICYgcGVyaW9kLnVuaXQpDQplbmQNCg0KZGVmaW5lIGZ1bmN0aW9uIFRvRGFpbHlfTXNnKGZyZXF1ZW5jeSBJbnRlZ2VyLCBwZXJpb2QgUXVhbnRpdHkpOg0KICBmcmVxdWVuY3kgRg0KICAgIGxldCByZXN1bHQ6IFRvRGFpbHkoZnJlcXVlbmN5LCBwZXJpb2QpDQogICAgcmV0dXJuIHsNCiAgICAgIHJlc3VsdDogcmVzdWx0LA0KICAgICAgbWVzc2FnZToNCiAgICAgICAgaWYgcmVzdWx0IGlzIG51bGwgdGhlbg0KICAgICAgICAgIE1zZygnT01US0xvZ2ljLlRvRGFpbHkuVW5rbm93blVuaXQnLCBFcnJvckxldmVsLCAnVW5rbm93biB1bml0ICcgJiBwZXJpb2QudW5pdCkNCiAgICAgICAgZWxzZQ0KICAgICAgICAgIG51bGwNCiAgICB9DQoNCi8qDQpSZXR1cm5zIHRoZSBvcGlvaWQgaW5ncmVkaWVudHMgYW5kIHRoZWlyIHN0cmVuZ3RocyB0aGF0DQptYWtlIHVwIHRoZSBkcnVnIGlkZW50aWZpZWQgYnkgdGhlIGdpdmVuIHJ4Tm9ybUNvZGUgYXMgYSBsaXN0IG9mIHR1cGxlczoNCg0KTGlzdDxUdXBsZSB7DQogIHJ4Tm9ybUNvZGUgQ29kZSwNCiAgZG9zZUZvcm1Db2RlIENvZGUsDQogIGRvc2VGb3JtTmFtZSBTdHJpbmcsDQogIGluZ3JlZGllbnRDb2RlIENvZGUsDQogIGluZ3JlZGllbnROYW1lIFN0cmluZywNCiAgc3RyZW5ndGggUXVhbnRpdHkNCn0+DQoqLw0KDQovKg0KR2V0SW5ncmVkaWVudHM6DQogIExpc3Q8ew0KICAgIHJ4Tm9ybUNvZGUgQ29kZSwNCiAgICBkb3NlRm9ybUNvZGUgQ29kZSwNCiAgICBpbmdyZWRpZW50Q29kZSBjb2RlLA0KICAgIHN0cmVuZ3RoIFF1YW50aXR5DQogIH0+DQoqLw0KZGVmaW5lIGZ1bmN0aW9uIEdldEluZ3JlZGllbnRzKHJ4Tm9ybUNvZGUgQ29kZSk6DQogIE9NVEtEYXRhLkRydWdJbmdyZWRpZW50cyBESQ0KICAgIHdoZXJlIERJLmRydWdDb2RlID0gVG9JbnRlZ2VyKHJ4Tm9ybUNvZGUuY29kZSkNCiAgICByZXR1cm4gew0KICAgICAgcnhOb3JtQ29kZTogQ29kZSB7IGNvZGU6IFRvU3RyaW5nKERJLmRydWdDb2RlKSwgc3lzdGVtOiAnaHR0cDovL3d3dy5ubG0ubmloLmdvdi9yZXNlYXJjaC91bWxzL3J4bm9ybScsIGRpc3BsYXk6IERJLmRydWdOYW1lIH0sDQogICAgICBkb3NlRm9ybUNvZGU6IENvZGUgeyBjb2RlOiBUb1N0cmluZyhESS5kb3NlRm9ybUNvZGUpLCBzeXN0ZW06ICdodHRwOi8vd3d3Lm5sbS5uaWguZ292L3Jlc2VhcmNoL3VtbHMvcnhub3JtJywgZGlzcGxheTogREkuZG9zZUZvcm1OYW1lIH0sDQogICAgICBpbmdyZWRpZW50Q29kZTogQ29kZSB7IGNvZGU6IFRvU3RyaW5nKERJLmluZ3JlZGllbnRDb2RlKSwgc3lzdGVtOiAnaHR0cDovL3d3dy5ubG0ubmloLmdvdi9yZXNlYXJjaC91bWxzL3J4bm9ybScsIGRpc3BsYXk6IERJLmluZ3JlZGllbnROYW1lIH0sDQogICAgICBzdHJlbmd0aDogUXVhbnRpdHkgew0KICAgICAgICB2YWx1ZTogREkuc3RyZW5ndGhWYWx1ZSwNCiAgICAgICAgdW5pdDogVG9VQ1VNKERJLnN0cmVuZ3RoVW5pdCkNCiAgICAgIH0NCiAgICB9DQoNCi8qDQpSZXR1cm5zIHRoZSBmaXJzdCBSeE5vcm0gY29kZSBpbiB0aGUgZ2l2ZW4gY29uY2VwdCB0aGF0IG1hdGNoZXMgYSBkcnVnIGNvZGUNCnNwZWNpZmllZCBpbiBPTVRLRGF0YS4NCiovDQpkZWZpbmUgZnVuY3Rpb24gR2V0TWVkaWNhdGlvbkNvZGUoY29uY2VwdCBDb25jZXB0KToNCiAgRmlyc3QoDQogICAgKChjb25jZXB0LmNvZGVzKSBDDQogICAgICB3aGVyZSBDLnN5c3RlbSA9ICdodHRwOi8vd3d3Lm5sbS5uaWguZ292L3Jlc2VhcmNoL3VtbHMvcnhub3JtJw0KICAgICAgICByZXR1cm4gc2luZ2xldG9uIGZyb20gKA0KICAgICAgICAgIE9NVEtEYXRhLkRydWdJbmdyZWRpZW50cyBESQ0KICAgICAgICAgICAgd2hlcmUgREkuZHJ1Z0NvZGUgPSBUb0ludGVnZXIoQy5jb2RlKQ0KICAgICAgICAgICAgcmV0dXJuIENvZGUgew0KICAgICAgICAgICAgICBjb2RlOiBUb1N0cmluZyhESS5kcnVnQ29kZSksDQogICAgICAgICAgICAgIHN5c3RlbTogJ2h0dHA6Ly93d3cubmxtLm5paC5nb3YvcmVzZWFyY2gvdW1scy9yeG5vcm0nLA0KICAgICAgICAgICAgICBkaXNwbGF5OiBESS5kcnVnTmFtZQ0KICAgICAgICAgICAgfQ0KICAgICAgICApDQogICAgKSBYDQogICAgICB3aGVyZSBYIGlzIG5vdCBudWxsDQogICkNCg0KLyoNClJldHVybnMgdGhlIGRpc3BsYXkgb2YgdGhlIGdpdmVuIGNvbmNlcHQsIGlmIHByZXNlbnQsIG90aGVyd2lzZSwgbG9va3MgdXAgbWVkaWNhdGlvbg0KbmFtZXMgZm9yIGFueSBSeE5vcm1Db2RlcyB3aXRoaW4gdGhlIGNvbmNlcHQgdXNpbmcgdGhlIEdldE1lZGljYXRpb25OYW1lIGZ1bmN0aW9uDQoqLw0KZGVmaW5lIGZ1bmN0aW9uIEdldE1lZGljYXRpb25Db25jZXB0TmFtZShjb25jZXB0IENvbmNlcHQpOg0KICBpZiBjb25jZXB0LmRpc3BsYXkgaXMgbnVsbCB0aGVuDQogICAgRmlyc3QoDQogICAgICAoY29uY2VwdC5jb2RlcykgQw0KICAgICAgICB3aGVyZSBDLnN5c3RlbSA9ICdodHRwOi8vd3d3Lm5sbS5uaWguZ292L3Jlc2VhcmNoL3VtbHMvcnhub3JtJw0KICAgICAgICByZXR1cm4gR2V0TWVkaWNhdGlvbk5hbWUoQykNCiAgICApDQogIGVsc2UNCiAgICBjb25jZXB0LmRpc3BsYXkNCg0KLyoNClJldHVybnMgdGhlIGRpc3BsYXkgb2YgdGhlIGdpdmVuIGNvZGUsIGlmIHByZXNlbnQsIG90aGVyd2lzZSBsb29rcyBpdCB1cCBmcm9tIHRoZSBPTVRLIGRhdGENCiovDQpkZWZpbmUgZnVuY3Rpb24gR2V0TWVkaWNhdGlvbk5hbWUocnhOb3JtQ29kZSBDb2RlKToNCiAgaWYgcnhOb3JtQ29kZS5kaXNwbGF5IGlzIG51bGwgdGhlbg0KICAgIHNpbmdsZXRvbiBmcm9tICgNCiAgICAgIE9NVEtEYXRhLkRydWdJbmdyZWRpZW50cyBESQ0KICAgICAgICB3aGVyZSBESS5kcnVnQ29kZSA9IFRvSW50ZWdlcihyeE5vcm1Db2RlLmNvZGUpDQogICAgICAgIHJldHVybiBESS5kcnVnTmFtZQ0KICAgICkNCiAgICBlbHNlIHJ4Tm9ybUNvZGUuZGlzcGxheQ0KDQovKg0KUmV0dXJucyB0aGUgZGlzcGxheSBvZiB0aGUgZ2l2ZW4gaW5ncmVkaWVudCwgaWYgcHJlc2VudCwgb3RoZXJ3aXNlIGxvb2tzIGl0IHVwIGZyb20gdGhlIE9NVEsgZGF0YQ0KKi8NCmRlZmluZSBmdW5jdGlvbiBHZXRJbmdyZWRpZW50TmFtZShpbmdyZWRpZW50Q29kZSBDb2RlKToNCiAgaWYgaW5ncmVkaWVudENvZGUuZGlzcGxheSBpcyBudWxsIHRoZW4NCiAgICBzaW5nbGV0b24gZnJvbSAoDQogICAgICBPTVRLRGF0YS5EcnVnSW5ncmVkaWVudHMgREkNCiAgICAgICAgd2hlcmUgREkuaW5ncmVkaWVudENvZGUgPSBUb0ludGVnZXIoaW5ncmVkaWVudENvZGUuY29kZSkNCiAgICAgICAgcmV0dXJuIERJLmluZ3JlZGllbnROYW1lDQogICAgKQ0KICAgIGVsc2UgaW5ncmVkaWVudENvZGUuZGlzcGxheQ0KDQovKg0KUmV0dXJucyB0aGUgZGlzcGxheSBvZiB0aGUgZ2l2ZW4gZG9zZSBmb3JtLCBpZiBwcmVzZW50LCBvdGhlcndpc2UgbG9va3MgaXQgdXAgZnJvbSB0aGUgT01USyBkYXRhDQoqLw0KZGVmaW5lIGZ1bmN0aW9uIEdldERvc2VGb3JtTmFtZShkb3NlRm9ybUNvZGUgQ29kZSk6DQogIGlmIGRvc2VGb3JtQ29kZS5kaXNwbGF5IGlzIG51bGwgdGhlbg0KICAgIHNpbmdsZXRvbiBmcm9tICgNCiAgICAgIE9NVEtEYXRhLkRydWdJbmdyZWRpZW50cyBESQ0KICAgICAgICB3aGVyZSBESS5kb3NlRm9ybUNvZGUgPSBUb0ludGVnZXIoZG9zZUZvcm1Db2RlLmNvZGUpDQogICAgICAgIHJldHVybiBESS5kb3NlRm9ybU5hbWUNCiAgICApDQogICAgZWxzZSBkb3NlRm9ybUNvZGUuZGlzcGxheQ0KDQovKg0KICBSZW1vdmVzIHRoZSBsYXN0IHBlciBhcmd1bWVudCBmcm9tIGEgdW5pdA0KICBOT1RFOiBSZXdyb3RlIHRvIG5vdCB1c2UgTGFzdFBvc2l0aW9uT2YsIHNpbmNlIHRoYXQgZnVuY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBKUyBlbmdpbmUNCiAgaHR0cHM6Ly9naXRodWIuY29tL2NxZnJhbWV3b3JrL2NxbC1leGVjdXRpb24vaXNzdWVzLzE0Nw0KKi8NCmRlZmluZSBmdW5jdGlvbiBTdHJpcFBlcih1bml0IFN0cmluZyk6DQogIHVuaXQgWA0KICAgIGxldCBzcGxpdDogU3BsaXQodW5pdCwgJy8nKSwNCiAgICAgIHNwbGl0Q291bnQ6IENvdW50KHNwbGl0KQ0KICAgIHJldHVybg0KICAgICAgaWYgc3BsaXRDb3VudCA+IDEgdGhlbg0KICAgICAgICBTdWJzdHJpbmcodW5pdCwgMCwgTGVuZ3RoKHVuaXQpIC0gTGVuZ3RoKHNwbGl0W3NwbGl0Q291bnQgLSAxXSkgLSAxKQ0KICAgICAgZWxzZQ0KICAgICAgICB1bml0DQoNCi8qDQpkZWZpbmUgZnVuY3Rpb24gU3RyaXBQZXIodW5pdCBTdHJpbmcpOg0KICBpZiBMYXN0UG9zaXRpb25PZignLycsIHVuaXQpID49IDANCiAgICB0aGVuIFN1YnN0cmluZyh1bml0LCAwLCBMYXN0UG9zaXRpb25PZignLycsIHVuaXQpKQ0KICAgIGVsc2UgdW5pdA0KKi8NCg0KLyoNCiAgQ2FsY3VsYXRlcyBkYWlseSBkb3NlIGZvciBhIHNwZWNpZmljIGluZ3JlZGllbnQgYmFzZWQgb24gdGhlIGluZ3JlZGllbnQgc3RyZW5ndGgsDQogIGRvc2UgZm9ybSwgZG9zZSBxdWFudGl0eSwgYW5kIGRhaWx5IGZyZXF1ZW5jeS4NCiAgSW4gYWRkaXRpb24sIHJldHVybnMgYSB0ZXh0dWFsIGRlc2NyaXB0aW9uIG9mIHRoZSBkYWlseSBkb3NlLg0KICBUdXBsZSB7IHJlc3VsdDogUXVhbnRpdHksIGRlc2NyaXB0aW9uOiBTdHJpbmcgfQ0KKi8NCmRlZmluZSBmdW5jdGlvbiBHZXREYWlseURvc2UoaW5ncmVkaWVudENvZGUgQ29kZSwgc3RyZW5ndGggUXVhbnRpdHksIGRvc2VGb3JtQ29kZSBDb2RlLCBkb3NlUXVhbnRpdHkgUXVhbnRpdHksIGRvc2VzUGVyRGF5IERlY2ltYWwpOg0KICBjYXNlDQogICAgd2hlbiBkb3Nlc1BlckRheSBpcyBudWxsIG9yIGRvc2VRdWFudGl0eSBpcyBudWxsIG9yIHN0cmVuZ3RoIGlzIG51bGwgb3Igc3RyZW5ndGgudmFsdWUgaXMgbnVsbCBvciBzdHJlbmd0aC51bml0IGlzIG51bGwgdGhlbg0KICAgICAgew0KICAgICAgICByZXN1bHQ6IG51bGwgYXMgUXVhbnRpdHksDQogICAgICAgIGRlc2NyaXB0aW9uOiAnTWlzc2luZyBkb3NlcyBwZXIgZGF5LCBkb3NlIHF1YW50aXR5LCBhbmQvb3Igc3RyZW5ndGgnDQogICAgICB9DQoJICAvKiBpZiBwYXRjaCAtLT4gZGFpbHkgZG9zZSA9IGRvc2UgdmFsdWUgKGUuZywgbnVtYmVyIHBhdGNoZXMgd2l0aCBkb3NlUXVhbnRpdHkgdW5pdCA9ICJwYXRjaCIpICogcGVyLWhvdXIgc3RyZW5ndGggKi8NCiAgICB3aGVuIFRvSW50ZWdlcihkb3NlRm9ybUNvZGUuY29kZSkgPSAzMTY5ODcgdGhlbg0KICAgICAgLyogYnVwcmVub3JwaGluZSBvciBmZW50YW55bCBwYXRjaCAqLw0KICAgICAgaWYgVG9JbnRlZ2VyKGluZ3JlZGllbnRDb2RlLmNvZGUpIGluIHsgMTgxOSwgNDMzNyB9IHRoZW4NCiAgICAgICAgKFF1YW50aXR5IHsgdmFsdWU6IGRvc2VzUGVyRGF5ICogZG9zZVF1YW50aXR5LnZhbHVlICogc3RyZW5ndGgudmFsdWUsIHVuaXQ6IHN0cmVuZ3RoLnVuaXQgfSkgZGFpbHlEb3NlDQogICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIHJlc3VsdDogZGFpbHlEb3NlLA0KICAgICAgICAgICAgZGVzY3JpcHRpb246IEdldEluZ3JlZGllbnROYW1lKGluZ3JlZGllbnRDb2RlKSAmICcgcGF0Y2g6ICcgJiBUb1N0cmluZyhkb3NlUXVhbnRpdHkudmFsdWUpICYgJyAqICcgJiBUb1N0cmluZyhkb3Nlc1BlckRheSkgJiAnL2QgKiAnICYgVG9TdHJpbmcoc3RyZW5ndGgpICYgJyA9ICcgKyBUb1N0cmluZyhkYWlseURvc2UpDQogICAgICAgICAgfQ0KICAgICAgZWxzZQ0KICAgICAgICB7DQogICAgICAgICAgcmVzdWx0OiBudWxsIGFzIFF1YW50aXR5LA0KICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVW5rbm93biBwYXRjaCBpbmdyZWRpZW50OiAnICYgaW5ncmVkaWVudENvZGUuY29kZSAmICc6JyAmIGluZ3JlZGllbnRDb2RlLmRpc3BsYXkNCiAgICAgICAgfQ0KDQogICAgLyogaWYgZG9zZSB1bml0IGluIGFjdHVhbCBtYXNzIHVuaXRzIChtZyBvciB1ZyAtLSB3aGVuIGl0J3MgYSBzaW5nbGUgbWVkKSAtLT4gZGFpbHkgZG9zZSA9IG51bVRpbWVzUGVyRGF5ICogZG9zZSAqLw0KICAgIHdoZW4gZG9zZVF1YW50aXR5LnVuaXQgaW4geyAnbWcnLCAndWcnIH0gdGhlbg0KICAgICAgKFF1YW50aXR5IHsgdmFsdWU6IGRvc2VzUGVyRGF5ICogZG9zZVF1YW50aXR5LnZhbHVlLCB1bml0OiBkb3NlUXVhbnRpdHkudW5pdCB9KSBkYWlseURvc2UNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICByZXN1bHQ6IGRhaWx5RG9zZSwNCiAgICAgICAgICBkZXNjcmlwdGlvbjogR2V0SW5ncmVkaWVudE5hbWUoaW5ncmVkaWVudENvZGUpICsgJyAnICsgR2V0RG9zZUZvcm1OYW1lKGRvc2VGb3JtQ29kZSkgKyAnOiAnICsgVG9TdHJpbmcoZG9zZXNQZXJEYXkpICsgJy9kICogJyArIFRvU3RyaW5nKGRvc2VRdWFudGl0eSkgKyAnID0gJyArIFRvU3RyaW5nKGRhaWx5RG9zZSkNCiAgICAgICAgfQ0KDQogICAgLyogaWYgZG9zZVF1YW50aXR5IGlzIGluIGFjdHVhbCB2b2x1bWUgdW5pdHMgKG1MKSAtLT4gZGFpbHkgZG9zZSA9IG51bVRpbWVzUGVyRGF5ICogZG9zZSAqIHN0cmVuZ3RoICovDQogICAgd2hlbiBkb3NlUXVhbnRpdHkudW5pdCA9ICdtTCcgYW5kIChQb3NpdGlvbk9mKCcvbUwnLCBzdHJlbmd0aC51bml0KSA9IExlbmd0aChzdHJlbmd0aC51bml0KSAtIDMpIHRoZW4NCiAgICAgIChRdWFudGl0eSB7IHZhbHVlOiBkb3Nlc1BlckRheSAqIGRvc2VRdWFudGl0eS52YWx1ZSAqIHN0cmVuZ3RoLnZhbHVlLCB1bml0OiBTdHJpcFBlcihzdHJlbmd0aC51bml0KSB9KSBkYWlseURvc2UNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICByZXN1bHQ6IGRhaWx5RG9zZSwNCiAgICAgICAgICBkZXNjcmlwdGlvbjogR2V0SW5ncmVkaWVudE5hbWUoaW5ncmVkaWVudENvZGUpICsgJyAnICsgR2V0RG9zZUZvcm1OYW1lKGRvc2VGb3JtQ29kZSkgKyAnOiAnICsgVG9TdHJpbmcoZG9zZXNQZXJEYXkpICsgJy9kICogJyArIFRvU3RyaW5nKGRvc2VRdWFudGl0eSkgKyAnICogJyAmIFRvU3RyaW5nKHN0cmVuZ3RoKSAmICcgPSAnICsgVG9TdHJpbmcoZGFpbHlEb3NlKQ0KICAgICAgICB9DQoNCgkJLyogaWYgZG9zZVF1YW50aXR5IGlzIG5vdCBpbiBhY3R1YWwgdW5pdHMgKGUuZy4sIDEgdGFiLCAxIHNwcmF5IC0tIHdoZW4gaXQncyBhIGNvbWJvIG1lZCB3aXRoIGEgdW5pdCBvZiB0YWJsZXQsIG9yIGl0J3MgbWcvYWN0dWF0KSAtLT4gIGRhaWx5IGRvc2UgPSBudW1UaW1lc1BlckRheSAqIGRvc2UgdmFsdWUgKiBzdHJlbmd0aCB2YWx1ZSAqLw0KICAgIGVsc2UNCiAgICAgIChRdWFudGl0eSB7IHZhbHVlOiBkb3Nlc1BlckRheSAqIGRvc2VRdWFudGl0eS52YWx1ZSAqIHN0cmVuZ3RoLnZhbHVlLCB1bml0OiBTdHJpcFBlcihzdHJlbmd0aC51bml0KSB9KSBkYWlseURvc2UNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICByZXN1bHQ6IGRhaWx5RG9zZSwNCiAgICAgICAgICBkZXNjcmlwdGlvbjogR2V0SW5ncmVkaWVudE5hbWUoaW5ncmVkaWVudENvZGUpICsgJyAnICsgR2V0RG9zZUZvcm1OYW1lKGRvc2VGb3JtQ29kZSkgKyAnOiAnICsgVG9TdHJpbmcoZG9zZXNQZXJEYXkpICsgJy9kICogJyArIFRvU3RyaW5nKGRvc2VRdWFudGl0eSkgKyAnICogJyArIFRvU3RyaW5nKHN0cmVuZ3RoKSArICcgPSAnICsgVG9TdHJpbmcoZGFpbHlEb3NlKQ0KICAgICAgICB9DQplbmQNCg0KLyoNCiAgQ2FsY3VsYXRlcyBNTUVzIGZvciB0aGUgZ2l2ZW4gaW5wdXQgcHJlc2NyaXB0aW9uIGluZm9ybWF0aW9uIGFuZCByZXR1cm5zIGl0DQogIGFzIGEgbGlzdCBvZiB0dXBsZXM6DQoNCiAgTGlzdDxUdXBsZSB7DQogICAgcnhOb3JtQ29kZSBDb2RlLA0KICAgIGRvc2VGb3JtQ29kZSBDb2RlLA0KICAgIGRvc2VRdWFudGl0eSBRdWFudGl0eSwNCiAgICBkb3Nlc1BlckRheSBEZWNpbWFsLA0KICAgIGluZ3JlZGllbnRDb2RlIENvZGUsDQogICAgc3RyZW5ndGggUXVhbnRpdHksDQogICAgZGFpbHlEb3NlIFF1YW50aXR5LA0KICAgIGRhaWx5RG9zZURlc2NyaXB0aW9uIFN0cmluZywNCiAgICBjb252ZXJzaW9uRmFjdG9yIERlY2ltYWwsDQogICAgbW1lIFF1YW50aXR5DQogIH0+DQoqLw0KZGVmaW5lIGZ1bmN0aW9uIENhbGN1bGF0ZU1NRXMobWVkaWNhdGlvbnMgTGlzdDxUdXBsZSB7IHJ4Tm9ybUNvZGUgQ29kZSwgZG9zZVF1YW50aXR5IFF1YW50aXR5LCBkb3Nlc1BlckRheSBEZWNpbWFsIH0+KToNCiAgRmxhdHRlbigNCiAgICBtZWRpY2F0aW9ucyBNDQogICAgICBsZXQgSW5ncmVkaWVudHM6IEdldEluZ3JlZGllbnRzKE0ucnhOb3JtQ29kZSkNCiAgICAgIHJldHVybg0KICAgICAgICBJbmdyZWRpZW50cyBJDQogICAgICAgICAgbGV0DQogICAgICAgICAgICBhZGp1c3RlZERvc2VRdWFudGl0eTogTS5kb3NlUXVhbnRpdHksDQogICAgICAgICAgICBkYWlseURvc2U6IEdldERhaWx5RG9zZShJLmluZ3JlZGllbnRDb2RlLCBJLnN0cmVuZ3RoLCBJLmRvc2VGb3JtQ29kZSwgYWRqdXN0ZWREb3NlUXVhbnRpdHksIE0uZG9zZXNQZXJEYXkpLA0KICAgICAgICAgICAgZmFjdG9yOiBDb252ZXJzaW9uRmFjdG9ycy5HZXRDb252ZXJzaW9uRmFjdG9yKEkuaW5ncmVkaWVudENvZGUsIGRhaWx5RG9zZS5yZXN1bHQsIEkuZG9zZUZvcm1Db2RlLCBNLmRvc2VzUGVyRGF5KQ0KICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICByeE5vcm1Db2RlOiBNLnJ4Tm9ybUNvZGUsDQogICAgICAgICAgICBkb3NlRm9ybUNvZGU6IEkuZG9zZUZvcm1Db2RlLA0KICAgICAgICAgICAgZG9zZVF1YW50aXR5OiBhZGp1c3RlZERvc2VRdWFudGl0eSwNCiAgICAgICAgICAgIGRvc2VzUGVyRGF5OiBNLmRvc2VzUGVyRGF5LA0KICAgICAgICAgICAgaW5ncmVkaWVudENvZGU6IEkuaW5ncmVkaWVudENvZGUsDQogICAgICAgICAgICBzdHJlbmd0aDogSS5zdHJlbmd0aCwNCiAgICAgICAgICAgIGRhaWx5RG9zZTogZGFpbHlEb3NlLnJlc3VsdCwNCiAgICAgICAgICAgIGRhaWx5RG9zZURlc2NyaXB0aW9uOiBkYWlseURvc2UuZGVzY3JpcHRpb24gJiAoJyAqIGZhY3RvcjogJyArIENvYWxlc2NlKFRvU3RyaW5nKGZhY3RvciksICdObyBjb252ZXJzaW9uIGZhY3RvciBhdmFpbGFibGUnKSksDQogICAgICAgICAgICBjb252ZXJzaW9uRmFjdG9yOiBmYWN0b3IsDQogICAgICAgICAgICBtbWU6IFF1YW50aXR5KA0KICAgICAgICAgICAgICBSb3VuZChkYWlseURvc2UucmVzdWx0LnZhbHVlICogZmFjdG9yLCAxKSwNCiAgICAgICAgICAgICAgJ3tNTUV9L2QnDQogICAgICAgICAgICApDQogICAgICAgICAgfQ0KICApDQoNCmRlZmluZSBmdW5jdGlvbiBRdWFudGl0eSh2YWx1ZSBEZWNpbWFsLCB1bml0IFN0cmluZyk6DQogIGlmIHZhbHVlIGlzIG5vdCBudWxsIHRoZW4NCiAgICBRdWFudGl0eSB7IHZhbHVlOiB2YWx1ZSwgdW5pdDogdW5pdCB9DQogIGVsc2UNCiAgICBudWxs"
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}